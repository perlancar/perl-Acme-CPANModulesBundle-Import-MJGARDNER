# This file was first automatically generated by gen-acme-cpanmodules-module-from-acme-cpanlists-list on Sat Sep 22 08:00:33 2018 from module list in Acme::CPANLists::Import::NEILB::ModuleLoading version 0.04.

package Acme::CPANModules::Import::NEILB::ModuleLoading;

# DATE
# VERSION

our $LIST = {
  description => "This list is generated by extracting module names mentioned in the article [http://neilb.org/reviews/module-loading.html]. For the full article, visit the URL.",
  entries     => [
                   { module => "Acme::require::case" },
                   { module => "AnyLoader" },
                   { module => "Class::Autouse" },
                   { module => "Class::LazyLoad" },
                   { module => "Class::Load" },
                   { module => "Class::Load::XS" },
                   { module => "Class::Loader" },
                   { module => "ClassLoader" },
                   { module => "MAD::Loader" },
                   { module => "Module::Hash" },
                   { module => "Module::Implementation" },
                   { module => "Module::Load" },
                   { module => "Module::Load::Conditional" },
                   { module => "Module::Quote" },
                   { module => "Module::Recursive::Require" },
                   { module => "Module::Require" },
                   { module => "Module::Requires" },
                   { module => "Module::Runtime" },
                   { module => "Module::UseFrom" },
                   { module => "Mojo::Loader" },
                   { module => "Mrequire" },
                   { module => "Object::Trampoline" },
                   { module => "UNIVERSAL::require" },
                   { module => "above" },
                   { module => "aliased" },
                   { module => "all" },
                   { module => "autouse" },
                   { module => "base" },
                   { module => "lib::require::all" },
                   { module => "only" },
                   { module => "parent" },
                   { module => "pkg" },
                   { module => "provide" },
                   { module => "relative" },
                   { module => "superclass" },
                   { module => "syntax" },
                   { module => "use" },
                 ],
  summary     => "Modules that (can) load other modules (2013)",
};

1;
# ABSTRACT: Modules that (can) load other modules (2013)

